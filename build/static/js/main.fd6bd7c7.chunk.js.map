{"version":3,"sources":["components/Editor.js","hooks/useLocalStorage.js","App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","onClick","prevOpen","onBeforeChange","editor","data","options","lineWrapping","lint","mode","lineNumbers","theme","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","title","sandbox","frameBorder","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sOAQe,SAASA,EAAOC,GAC3B,IAAQC,EAA2CD,EAA3CC,SAAUC,EAAiCF,EAAjCE,YAAaC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SACtC,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAMA,OACI,sBAAKC,UAAS,2BAAsBF,EAAO,IAAM,cAAjD,UACI,sBAAKE,UAAU,eAAf,UACKN,EACD,wBAAQO,QAAS,kBAAMF,GAAQ,SAACG,GAAD,OAAeA,MAA9C,kBAIJ,cAAC,aAAD,CACIF,UAAU,sBACVG,eAdZ,SAAsBC,EAAQC,EAAMV,GAChCC,EAASD,IAcDA,MAAOA,EACPW,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMhB,EACNiB,aAAa,EACbC,MAAO,iBC7BZ,SAASC,EAAgBC,EAAKC,GACzC,IAAMC,EAHK,iBAGkBF,EAE7B,EAA0BhB,oBAAS,WAC/B,IAAMmB,EAAYC,aAAaC,QAAQH,GACvC,OAAiB,MAAbC,EAA0BG,KAAKC,MAAMJ,GAEb,oBAAjBF,EACAA,IAEAA,KAPf,mBAAOnB,EAAP,KAAc0B,EAAd,KAeA,OAJAC,qBAAU,WACNL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU7B,MAClD,CAACoB,EAAapB,IAEV,CAACA,EAAO0B,GCqCJI,MAvDf,WACI,MAAwBb,EAAgB,OAAQ,IAAhD,mBAAOc,EAAP,KAAaC,EAAb,KACA,EAAsBf,EAAgB,MAAO,IAA7C,mBAAOgB,EAAP,KAAYC,EAAZ,KACA,EAAoBjB,EAAgB,KAAM,IAA1C,mBAAOkB,EAAP,KAAWC,EAAX,KACA,EAA4BlC,mBAAS,KAArC,mBAAOmC,EAAP,KAAeC,EAAf,KAeA,OAbAX,qBAAU,WACN,IAAMY,EAAUC,YAAW,WACvBF,EAAU,iCAAD,OAETP,EAFS,mCAGRE,EAHQ,qCAIPE,EAJO,wCAOV,KACH,OAAO,kBAAMM,aAAaF,MAC3B,CAACR,EAAME,EAAKE,IAGX,qCACI,sBAAK9B,UAAU,gBAAf,UACI,cAACT,EAAD,CACIE,SAAS,MACTC,YAAY,OACZC,MAAO+B,EACP9B,SAAU+B,IAEd,cAACpC,EAAD,CACIE,SAAS,MACTC,YAAY,MACZC,MAAOiC,EACPhC,SAAUiC,IAEd,cAACtC,EAAD,CACIE,SAAS,aACTC,YAAY,aACZC,MAAOmC,EACPlC,SAAUmC,OAGlB,qBAAK/B,UAAU,QAAf,SACI,wBACIgC,OAAQA,EACRK,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,eC/C3BC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.fd6bd7c7.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\n\r\nexport default function Editor(props) {\r\n    const { language, displayName, value, onChange } = props;\r\n    const [open, setOpen] = useState(true);\r\n\r\n    function handleChange(editor, data, value) {\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? \" \" : \"collapsed \"}`}>\r\n            <div className='editor-title'>\r\n                {displayName}\r\n                <button onClick={() => setOpen((prevOpen) => !prevOpen)}>\r\n                    X\r\n                </button>\r\n            </div>\r\n            <ControlledEditor\r\n                className='code-mirror-wrapper'\r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    lineNumbers: true,\r\n                    theme: \"material\",\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst PREFIX = \"codepen-clone-\";\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const prefixedKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey);\r\n        if (jsonValue != null) return JSON.parse(jsonValue);\r\n\r\n        if (typeof initialValue === \"function\") {\r\n            return initialValue();\r\n        } else {\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value));\r\n    }, [prefixedKey, value]);\r\n\r\n    return [value, setValue];\r\n}\r\n","import Editor from \"./components/Editor\";\nimport React, { useState, useEffect } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nfunction App() {\n    const [html, setHtml] = useLocalStorage(\"html\", \"\");\n    const [css, setCss] = useLocalStorage(\"css\", \"\");\n    const [js, setJs] = useLocalStorage(\"js\", \"\");\n    const [srcDoc, setSrcDoc] = useState(\" \");\n\n    useEffect(() => {\n        const timeout = setTimeout(() => {\n            setSrcDoc(`\n\t\t\t<html>\n\t\t\t\t<body>${html}</body>\n\t\t\t\t<style>${css}</style>\n\t\t\t\t<script>${js}</script>\n\t\t\t</html>\n\t\t\t`);\n        }, 500);\n        return () => clearTimeout(timeout);\n    }, [html, css, js]);\n\n    return (\n        <>\n            <div className='pane top-pane'>\n                <Editor\n                    language='xml'\n                    displayName='HTML'\n                    value={html}\n                    onChange={setHtml}\n                />\n                <Editor\n                    language='css'\n                    displayName='CSS'\n                    value={css}\n                    onChange={setCss}\n                />\n                <Editor\n                    language='javascript'\n                    displayName='JavaScript'\n                    value={js}\n                    onChange={setJs}\n                />\n            </div>\n            <div className='pane '>\n                <iframe\n                    srcDoc={srcDoc}\n                    title='output'\n                    sandbox='allow-scripts'\n                    frameBorder='0'\n                    width='100%'\n                    height='100%'\n                />\n            </div>\n        </>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}